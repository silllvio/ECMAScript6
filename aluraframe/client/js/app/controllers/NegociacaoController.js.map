{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","Bind","ListaNegociacoes","NegociacoesView","_mensagem","Mensagem","MensagemView","_ordemAtual","_init","_service","NegociacaoService","findAll","then","negociacoes","forEach","adiciona","negociacao","catch","console","log","erro","texto","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","importa","delete","esvazia","Negociacao","DateHelper","textoParaData","value","parseInt","parseFloat","focus","coluna","inverteOrdem","ordena","p","s"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["class NegociacaoController {\n\n    constructor() {\n\n        let $ = document.querySelector.bind(document);\n\n        this._inputData = $('#data');\n        this._inputQuantidade = $('#quantidade');\n        this._inputValor = $('#valor');\n\n        this._listaNegociacoes = new Bind(\n            new ListaNegociacoes(),\n            new NegociacoesView($('#negociacoesView')),\n            'adiciona', 'esvazia', 'ordena', 'inverteOrdem');\n\n        this._mensagem = new Bind(\n            new Mensagem(), new MensagemView($('#mensagemView')),\n            'texto');\n\n        this._ordemAtual = '';\n\n        this._init();\n\n        this._service = new NegociacaoService();\n\n    }\n\n    _init() {\n\n        new NegociacaoService()\n            .findAll() // retorna todas as negociações.\n            .then(negociacoes =>\n                negociacoes.forEach(negociacao =>\n                    this._listaNegociacoes.adiciona(negociacao)))\n            .catch(erro => {\n                console.log(erro);\n                this._mensagem.texto = 'Erro na obtenção das listas';\n            })\n\n        setInterval(() => {\n            this.importaNegociacoes();\n        }, 3000)\n\n    }\n\n    adiciona(event) {\n\n        event.preventDefault();\n\n        let negociacao = this._criaNegociacao();\n\n        this._service\n            .cadastra(negociacao)\n            .then(mensagem => {\n                this._listaNegociacoes.adiciona(negociacao);\n                this._mensagem.texto = mensagem;\n                this._limpaFormulario();\n            }).catch(erro => this._mensagem.texto = erro);\n    }\n\n    importaNegociacoes() {\n\n        this._service\n            .importa(this._listaNegociacoes.negociacoes) // Passa a lista atual de negociações.\n            .then(negociacoes => negociacoes.forEach(negociacao => {\n                this._listaNegociacoes.adiciona(negociacao);\n                this._mensagem.texto = 'Negociações do período importadas'\n            }))\n            .catch(erro => this._mensagem.texto = erro);\n\n    }\n\n    apaga() {\n\n        this._service\n            .delete()\n            .then(mensagem => {\n                this._mensagem.texto = mensagem;\n                this._listaNegociacoes.esvazia();\n            })\n            .catch(erro => this._mensagem.texto = erro)\n\n    }\n\n    _criaNegociacao() {\n\n        return new Negociacao(\n            DateHelper.textoParaData(this._inputData.value),\n            parseInt(this._inputQuantidade.value),\n            parseFloat(this._inputValor.value));\n    }\n\n    _limpaFormulario() {\n\n        this._inputData.value = '';\n        this._inputQuantidade.value = 1;\n        this._inputValor.value = 0.0;\n        this._inputData.focus();\n    }\n\n    ordena(coluna) {\n\n        if (this._ordemAtual == coluna) {\n            this._listaNegociacoes.inverteOrdem();\n        } else {\n            this._listaNegociacoes.ordena((p, s) => p[coluna] - s[coluna]);\n        }\n        this._ordemAtual = coluna;\n    }\n\n\n}"]}